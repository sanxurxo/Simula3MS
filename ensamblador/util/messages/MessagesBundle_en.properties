ensamblar = Assemble
ejecutar = Execute
archivo = File
nuevo = New
abrir = Open
guardar = Save
guardarComo = Save As
imprimir = Print
salir = Exit
edicion = Edit
deshacer = Undo
rehacer = Redo
seleccionarTodo = Select All
copiar = Copy
cortar = Cut
pegar = Paste
buscar = Find...
linea = Line
texto = Text
reemplazar = Replace
configuracion = Configuration
entradaSalida = Input/Output
encuesta = Polling
conInterrupciones = With interrupts
desactivada = Deactivated
caminoDeDatos = Datapath
monociclo = Monocycle
multiciclo = Multicycle
basico = Basic
marcador = Scoreboard
tomasulo = Tomasulo
segmentado = Pipeline
salto = Branch
saltoRetardado = Delayed branch
saltoFijo = Static branch prediction
ayuda = Help
acercaDe = About...
guiaRapida = Guía rapida
rutaGuiaRapida=/ensamblador/vista/html/quickGuide.html
errorSiguiente = Next error
linea2 = Line :
buscar2 = Find :
buscar3= Find
cerrar2 = Close
texto2 = Text :
buscarSiguiente = Find Next
buscar2 = Find :
reemplazar2 = Replace :
reemplazarTodos = Replace All
busqueda = SEARCH
buscarLinea = Find line
buscarTexto = Find text
volverAlEditor = Go back editor
pasoAnterior = Previous step
pasoSiguiente = Next step
cicloAnterior = Previous cycle
cicloSiguiente = Next cycle
breakpoint = Breakpoint
CICLOS = CYCLES
registros = General purpose
generales = registers
registrosDe = Floating     point
puntoFlotante = registers
MONOCICLO = MONOCYCLE
rutaMonociclo = /ensamblador/monociclo/ingles/
rutaMulticiclo = /ensamblador/multiciclo/ingles/
rutaSegmentado = /ensamblador/segmentado/ingles/
memoria = MEMORY
pila = STACK
error0 = An overflow has occured
error1 = Division by zero
error2 = Not valid jump address
error3 = Not valid memory access
resultado = RESULT
question5 = Write an integer
entrada = INPUT
question6 = Write a string
information8 = Not valid syscall code
question12 = Write a float
question13 = Write a double
error14 = Internal error
excepcion = EXCEPTION
error16 = Infinite loop
segmentoDeTexto = Text segment
segmentoDeDatos = Data segment
registros2 = Registers
SEGMENTADO = PIPELINE
U.F.entera = Integer F.U. 
U.F.sumaPF = FP add F.U.
U.F.multPF = FP mult F.U.
U.F.divPF = FP div F.U.
UNIDADES_FUNCIONALES = FUNCIONAL UNITS
unidades = Units
latencia = Latency
segmentadas = Pipelining
noSegmentadas = Not pipelining
aceptar = Accept
cancelar = Cancel
MARCADOR = SCOREBOARD
TOMASULO = TOMASULO
cerrar = Close
informe = Report
riesgosDeControl = Control hazards
riesgosEstructurales = Structural hazards
riesgosRAW = RAW hazards
riesgosWAW = WAW hazards
riesgosWAR = WAR hazards
riesgosDeCarga = Load hazards
RESUMEN = SUMMARY
1bufferde = 1 buffer of
buffersde = buffers of
FUenteradelatencia = Integer FU of latency
FUdesumadelatencia = Add FU of latency
FUdemultiplicaciondelatencia = Multiplication FU of latency
FUdedivisiondelatencia = Division FU of latency
ERsumadelatencia = Add RS of latency
ERmultiplicaciondelatencia = Multiplication RS of latency
ERdivisiondelatencia = Division RS of latency
decarga = load
dealmacenamiento = store
Numerodeinstruccionesejecutadas = Number of executed instructions:
Numerodeciclos = Number of cycles:
memoria2 = Memory
NumerodeNops = Number of Nops
Marcador = Scoreboard
Tomasulo = Tomasulo
diagramaMulticiclo = Multicycle diagram
diagramaMonociclo = Monocycle diagram
MULTICICLO = MULTICYCLE
Suma/Resta = Add/Subtraction
Multiplicacion = Multiplication
Division = Division
TABLAS = Tables
ESTADO_INST = Instruction status
estadoReg = Register result status
campo = Field
instruccion = Instruction
emision = Issue
lectura = Read operands
ejecucion = Execution
escritura = Write result
nombre = Name
ocupada = Busy
operacion = Operation
estadoFU = Funtional units status
estadoER = Reservation stations status
abs = Abs
suma = Add
div = Div
carga = Load
mult = Mult
resta = Sub
almacenamiento = Store
desplazamiento =Shamt
rutina = ROUTINE
monitor = Display
teclado = Keyboard
receiverControl = Receiver control
receiverData = Receiver data
transmitterControl = Transmitter control
transmitterData = Transmitter data
ER_ADD = Add
ER_DIV = Divide
ER_MULT = Mult
ER_LOAD = Load
ER_STORE = Store
FU_INTEGER = Int
FU_DIV = Div
FU_MULT = Mult
FU_ADD = Add
faltaMain = main: is missing
falta.globlMain = .globl main is missing
datosSinInicializar = Not initialized data 
falta.text = .text is missing
instruccionNoValida = Not valid instruction
variableYaDefinida = Already defined variable
tipoDeDatosNoValido = Not valid type of data
parametrosIncorrectos = Wrong parameters
datosIncorrectos = Wrong data
definicionDeDatosIncorrecta = Wrong data definition
U.F.entera = Integer F.U.
U.F.sumaPF = FP add F.U.
U.F.multPF = FP mult F.U.
U.F.divPF = FP div F.U.